repr <- str_remove(str_split(files[i], "_")[[1]][5], ".tsv")
temp_files <- read_tsv(files[i], col_names = T) %>%
mutate(Category = category,
Mode = repr)
pglm <- rbind(temp_files, pglm)
}
pglm %>%
filter(LRT <= 0.05 & wAIC >= 0.5 & binOne > 3) %>%
group_by(Category, Mode) %>%
summarise(N = n())
pglm %>%
ggplot(aes(x = Model, fill = Mode)) +
geom_bar()
pglm
pglm %>% filter(is.na(Model))
pglm <- pglm %>%
filter(LRT <= 0.05 & wAIC >= 0.5 & binOne > 3 & !(is.na(Model)))
pglm %>%
group_by(Category, Mode) %>%
summarise(N = n())
pglm %>%
ggplot(aes(x = Model, fill = Mode)) +
geom_bar()
pglm %>%
ggplot(aes(x = Model, fill = Mode)) +
geom_bar() +
facet_wrap(~Category, scale = "free_y")
pglm %>%
ggplot(aes(x = Model, fill = Mode)) +
geom_bar() +
facet_wrap(~Category, scale = "free_y", nrow = 2)
pglm %>%
ggplot(aes(x = Mode, fill = Model)) +
geom_bar() +
facet_wrap(~Category, scale = "free_y", nrow = 2)
pglm %>%
ggplot(aes(x = Model, fill = Mode)) +
geom_bar() +
facet_wrap(~Category, scale = "free_y", nrow =2)
pglm %>%
ggplot(aes(x = Model, fill = Mode)) +
geom_bar() +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw()
library(RColorBrewer)
pglm %>%
ggplot(aes(x = Model, fill = Mode)) +
geom_bar() +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Set2")
pglm %>%
ggplot(aes(x = Mode, fill = Model)) +
geom_bar() +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Set2")
pglm %>%
ggplot(aes(x = Mode, fill = Model)) +
geom_bar() +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
pglm %>%
ggplot(aes(x = Mode, fill = Model)) +
geom_bar(alpha = 0.8, width = 0.7) +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
pglm %>%
ggplot(aes(x = Mode, fill = Model)) +
geom_bar(alpha = 0.8, width = 0.7, position = "dodge") +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
pglm %>% View()
#Visualize
pglm %>%
ggplot(aes(x = Mode, fill = Model)) +
geom_bar(alpha = 0.8, width = 0.7) +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
ggplot(aes(x = reorder(Mode, -Model), fill = Model)) +
geom_bar(alpha = 0.8, width = 0.7) +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
ggplot(aes(x = reorder(Mode, -Mode), fill = Model)) +
geom_bar(alpha = 0.8, width = 0.7) +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
ggplot(aes(x = reorder(Mode, Mode), fill = Model)) +
geom_bar(alpha = 0.8, width = 0.7) +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n(Model))
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n())
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>% View()
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
ggplot(aes(x = Mode, fill = reorder(Model, -N))) +
geom_bar(alpha = 0.8, width = 0.7) +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
ggplot(aes(x = Mode, fill = reorder(Model, -N))) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
ggplot(aes(x = Mode, fill = reorder(Model, Category, -N))) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
ggplot(aes(x = Mode, fill = reorder(Model, -N))) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
ggplot(aes(x = Mode, fill = reorder(Model, -N))) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
#  facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
ggplot(aes(x = Mode, fill = reorder(Model, -N))) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
?setdiff
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
arrange(desc(N))
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
arrange(Category, Mode, Model, desc(N))
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
arrange(Category, Mode, Model, desc(N)) %>%
mutate(Model = factor(Model, levels = unique(Model)))
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
arrange(Category, Mode, Model, desc(N)) %>%
mutate(Model = factor(Model, levels = unique(Model))) %>%
ggplot(aes(x = Mode, fill = Model)) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
arrange(desc(N)) %>%
mutate(Model = factor(Model, levels = unique(Model))) %>%
ggplot(aes(x = Mode, fill = Model)) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
?fct_reorder2
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
mutate(Model = factor(Model, levels = unique(Model))) %>%
ggplot(aes(x = Mode, fill = fct_reorder(Model, -N))) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
mutate(Model = factor(Model, levels = unique(Model))) %>%
ggplot(aes(x = Mode, fill = fct_reorder2(Model, Category, -N))) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
mutate(Model = factor(Model, levels = unique(Model))) %>%
ggplot(aes(x = Mode, fill = fct_reorder2(Model, -N, Category))) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
mutate(Model = factor(Model, levels = unique(Model))) %>%
ggplot(aes(x = Mode, fill = fct_reorder2(Model, Mode, -N))) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
mutate(Model = factor(Model, levels = unique(Model))) %>%
ggplot(aes(x = Mode, fill = fct_reorder2(Model, Category, Mode, -N))) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
mutate(Model = factor(Model, levels = unique(Model))) %>%
ggplot(aes(x = Mode, fill = fct_reorder2(Model, Category,-N))) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
mutate(Model = factor(Model, levels = unique(Model))) %>%
ggplot(aes(x = Mode, fill = fct_reorder2(Model, -N))) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
group_by(Category, Mode, Model) %>%
mutate(N = n()) %>%
mutate(Model = factor(Model, levels = unique(Model))) %>%
ggplot(aes(x = Mode, fill = fct_reorder(Model, -N))) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
filter(Category == "expr") %>%
group_by(Mode, Model) %>%
mutate(N = n()) %>%
mutate(Model = factor(Model, levels = unique(Model))) %>%
ggplot(aes(x = Mode, fill = fct_reorder(Model, -N))) +
geom_bar(alpha = 0.8, width = 0.7, position = 'dodge') +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
#Visualize
pglm %>%
filter(Category == "expr") %>%
group_by(Mode, Model) %>%
mutate(N = n()) %>%
mutate(Model = factor(Model, levels = unique(Model))) %>%
ggplot(aes(x = Mode, fill = fct_reorder(Model, -N))) +
geom_bar(alpha = 0.8, width = 0.7) +
facet_wrap(~Category, scale = "free_y", nrow =2) +
theme_bw() +
scale_fill_brewer(palette = "Dark2")
pglm %>% View()
#Read in annotation data
#Annotation for orthogroups using a python scripts from:
#https://github.com/davidemms/OrthoFinder/issues/451
annot <- read.table("~/Documents/Gene_expr_evol/Models/N0_blasted.tsv", header = T, sep = "\t", quote = "")
annot <- tibble(annot) %>%
filter(Best_hit != "NO_HIT") %>%
mutate(across(E_val:len, as.double)) %>%
mutate(perc = iden/len) %>%
group_by(OG) %>%
arrange(E_val, desc(perc)) %>%
top_n(1) %>%
arrange(OG)
pglm$annot <- annot$Best_hit[match(pglm$OG, annot$OG)]
pglm %>% View()
library(clusterProfiler)
#Read in data from accs.R
t2g <- read.table("~/Documents/Gene_expr_evol/Gene_exprs_modelling_2023/GO/TERM2GENE.tsv",
sep = "\t", header = T)
t2n <- read.table("~/Documents/Gene_expr_evol/Gene_exprs_modelling_2023/GO/TERM2NAME.tsv",
sep = "\t", header = T)
i <- 1
#Initialize empty vector to use for merge_results downstream
#Enrichment results are saved in this list
list_out <- vector(mode = "list", length = length(unique(pglm$Mode)))
temp_model <- unique(pglm$Model)[i]
temp_df <- pglm
temp_model
temp_mode <- unique(pglm$Mode)[i]
temp_mode
temp_df <- pglm %>%
filter(Mode == temp_mode & Category == "expr") %>%
mutate(annot = str_remove_all(str_extract(temp_df$annot, "sp\\|.*\\|"), "sp\\||\\|"))
temp_df <- pglm %>%
filter(Mode == temp_mode & Category == "expr") %>%
mutate(annot = str_remove_all(str_extract(annot, "sp\\|.*\\|"), "sp\\||\\|"))
temp_df
enrich_res <- enricher(temp_df$annot,
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
qvalueCutoff = 0.05,
TERM2GENE = t2g,
TERM2NAME = t2n)
enrich_res@result <- subset(enrich_res@result, enrich_res@result$qvalue <= 0.05)
enrich_res
list_out[[i]] <- enrich_res
names(list_out)[i] <- temp_model
#Initialize empty vector to use for merge_results downstream
#Enrichment results are saved in this list
list_out_expr <- vector(mode = "list", length = length(unique(pglm$Mode)))
#Loop over each model and find enriched terms
for(i in 1:seq_along(unique(pglm$Mode))){
temp_mode <- unique(pglm$Mode)[i]
temp_df <- pglm %>%
filter(Mode == temp_mode & Category == "expr") %>%
mutate(annot = str_remove_all(str_extract(annot, "sp\\|.*\\|"), "sp\\||\\|"))
enrich_res <- enricher(temp_df$annot,
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
qvalueCutoff = 0.05,
TERM2GENE = t2g,
TERM2NAME = t2n)
enrich_res@result <- subset(enrich_res@result, enrich_res@result$qvalue <= 0.05)
list_out_expr[[i]] <- enrich_res
names(list_out_expr)[i] <- paste0(temp_mode, "_expr")
}
list_out_fc <- vector(mode = "list", length = length(unique(pglm$Mode)))
#Loop over each model and find enriched terms
for(i in 1:seq_along(unique(pglm$Mode))){
temp_mode <- unique(pglm$Mode)[i]
temp_df <- pglm %>%
filter(Mode == temp_mode & Category == "fc") %>%
mutate(annot = str_remove_all(str_extract(annot, "sp\\|.*\\|"), "sp\\||\\|"))
enrich_res <- enricher(temp_df$annot,
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
qvalueCutoff = 0.05,
TERM2GENE = t2g,
TERM2NAME = t2n)
enrich_res@result <- subset(enrich_res@result, enrich_res@result$qvalue <= 0.05)
list_out_fc[[i]] <- enrich_res
names(list_out_fc)[i] <- paste0(temp_mode, "_fc")
}
list_out <- c(list_out_expr, list_out_fc)
#Merge enriched results for comparisons with a dotplot
enrich_merge <- merge_result(list_out)
#Plot
dotplot(enrich_merge, showCategory = 10, repel = T) +
theme(axis.text.y = element_text(size = 10))
#Plot
dotplot(enrich_merge, showCategory = 10) +
theme(axis.text.y = element_text(size = 10))
i
#Loop over each model and find enriched terms
for(i in 1:seq_along(length(unique(pglm$Mode)))){
temp_mode <- unique(pglm$Mode)[i]
temp_df <- pglm %>%
filter(Mode == temp_mode & Category == "expr") %>%
mutate(annot = str_remove_all(str_extract(annot, "sp\\|.*\\|"), "sp\\||\\|"))
enrich_res <- enricher(temp_df$annot,
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
qvalueCutoff = 0.05,
TERM2GENE = t2g,
TERM2NAME = t2n)
enrich_res@result <- subset(enrich_res@result, enrich_res@result$qvalue <= 0.05)
list_out_expr[[i]] <- enrich_res
names(list_out_expr)[i] <- paste0(temp_mode, "_expr")
}
#Initialize empty vector to use for merge_results downstream
#Enrichment results are saved in this list
list_out_expr <- vector(mode = "list", length = length(unique(pglm$Mode)))
#Loop over each model and find enriched terms
for(i in 1:seq_along(length(unique(pglm$Mode)))){
temp_mode <- unique(pglm$Mode)[i]
temp_df <- pglm %>%
filter(Mode == temp_mode & Category == "expr") %>%
mutate(annot = str_remove_all(str_extract(annot, "sp\\|.*\\|"), "sp\\||\\|"))
enrich_res <- enricher(temp_df$annot,
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
qvalueCutoff = 0.05,
TERM2GENE = t2g,
TERM2NAME = t2n)
enrich_res@result <- subset(enrich_res@result, enrich_res@result$qvalue <= 0.05)
list_out_expr[[i]] <- enrich_res
names(list_out_expr)[i] <- paste0(temp_mode, "_expr")
}
list_out_fc <- vector(mode = "list", length = length(unique(pglm$Mode)))
#Loop over each model and find enriched terms
for(i in 1:seq_along(length(unique(pglm$Mode)))){
temp_mode <- unique(pglm$Mode)[i]
temp_df <- pglm %>%
filter(Mode == temp_mode & Category == "fc") %>%
mutate(annot = str_remove_all(str_extract(annot, "sp\\|.*\\|"), "sp\\||\\|"))
enrich_res <- enricher(temp_df$annot,
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
qvalueCutoff = 0.05,
TERM2GENE = t2g,
TERM2NAME = t2n)
enrich_res@result <- subset(enrich_res@result, enrich_res@result$qvalue <= 0.05)
list_out_fc[[i]] <- enrich_res
names(list_out_fc)[i] <- paste0(temp_mode, "_fc")
}
list_out <- c(list_out_expr, list_out_fc)
#Merge enriched results for comparisons with a dotplot
enrich_merge <- merge_result(list_out)
#Plot
dotplot(enrich_merge, showCategory = 10) +
theme(axis.text.y = element_text(size = 10))
list_out_expr
#Initialize empty vector to use for merge_results downstream
#Enrichment results are saved in this list
list_out_expr <- vector(mode = "list", length = length(unique(pglm$Mode)))
#Loop over each model and find enriched terms
for(i in 1:length(unique(pglm$Mode))){
temp_mode <- unique(pglm$Mode)[i]
temp_df <- pglm %>%
filter(Mode == temp_mode & Category == "expr") %>%
mutate(annot = str_remove_all(str_extract(annot, "sp\\|.*\\|"), "sp\\||\\|"))
enrich_res <- enricher(temp_df$annot,
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
qvalueCutoff = 0.05,
TERM2GENE = t2g,
TERM2NAME = t2n)
enrich_res@result <- subset(enrich_res@result, enrich_res@result$qvalue <= 0.05)
list_out_expr[[i]] <- enrich_res
names(list_out_expr)[i] <- paste0(temp_mode, "_expr")
}
list_out_fc <- vector(mode = "list", length = length(unique(pglm$Mode)))
#Loop over each model and find enriched terms
for(i in 1:length(unique(pglm$Mode))){
temp_mode <- unique(pglm$Mode)[i]
temp_df <- pglm %>%
filter(Mode == temp_mode & Category == "fc") %>%
mutate(annot = str_remove_all(str_extract(annot, "sp\\|.*\\|"), "sp\\||\\|"))
enrich_res <- enricher(temp_df$annot,
pvalueCutoff = 0.05,
pAdjustMethod = "fdr",
qvalueCutoff = 0.05,
TERM2GENE = t2g,
TERM2NAME = t2n)
enrich_res@result <- subset(enrich_res@result, enrich_res@result$qvalue <= 0.05)
list_out_fc[[i]] <- enrich_res
names(list_out_fc)[i] <- paste0(temp_mode, "_fc")
}
list_out <- c(list_out_expr, list_out_fc)
#Merge enriched results for comparisons with a dotplot
enrich_merge <- merge_result(list_out)
#Plot
dotplot(enrich_merge, showCategory = 10) +
theme(axis.text.y = element_text(size = 10))
#Plot
dotplot(enrich_merge, showCategory = 10) +
theme(axis.text.y = element_text(size = 12))
View(pglm)
pglm %>% select(Model, Category, Mode, annot) %>% View()
pglm %>% select(OG, Model, Category, Mode, annot) %>% View()
